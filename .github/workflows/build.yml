# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  DOCKER_IMAGE_ORIGIN: "docker.pkg.github.com/ssharshunov/chaos_calmer/openwrt_build"
  DOCKER_IMAGE_VERSION: "1.1"
  REPOSITORY: "chaos_calmer"
  IN_DOCKER_ROOT_FOLDER: "/src/chaos_calmer"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    name: ${{ matrix.chip.name }}
    
    strategy:
      fail-fast: false
      matrix:
        chip:
         - name: ðŸ“¦hi3518ev200
           SOC: hi3518ev200
           artifact: hi3518ev200.tar.xz
           kernel: "3.4.35"
#           - name: ðŸ“¦hi3516cv200
#             SOC: hi3516cv200
#             artifact: hi3516cv200.tar.xz

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Create dl folder
      run: mkdir ${PWD}/dl
      
    - name: Login to docker registry
      id: login_reg
      run: |
        # Login to GitHub Packages and build Docker image
        docker login docker.pkg.github.com -u ssharshunov -p ${GITHUB_TOKEN}
        docker pull ${DOCKER_IMAGE_ORIGIN}:${DOCKER_IMAGE_VERSION}
        
    - name: Clone source code
      env:
        REPO_URL: https://github.com/OpenIPC/chaos_calmer
        REPO_BRANCH: feature/zigfisher_current_work
      run: git clone --depth 1 ${REPO_URL} -b ${REPO_BRANCH} ${REPOSITORY}
      
    - name: Prepare openwrt
      id: prepare
      run: |
        echo "18ev200_sergek" > ${REPOSITORY}/target/linux/hi35xx/base-files/etc/soc-version
        ls -la chaos_calmer
        ls -la ${PWD}
        wget https://raw.githubusercontent.com/SSharshunov/chaos_calmer/master/wrt_config_ser_01 -O ${REPOSITORY}/target/linux/hi35xx/examples/.config_18ev200_zftlab_rotek
        wget https://raw.githubusercontent.com/SSharshunov/chaos_calmer/master/ker_config_ser_01 -O ${REPOSITORY}/target/linux/hi35xx/config-${{ matrix.chip.kernel }}
        sed -i "s/KERNEL_PATCHVER:=.*/KERNEL_PATCHVER:=${{ matrix.chip.kernel }}/" ${REPOSITORY}/target/linux/hi35xx/Makefile
        echo "::set-output name=status::success"
        
    - name: Build
      id: compile
#       if: steps.compile.download_packages.status == 'success'
      run: |
        docker run -v ${PWD}/dl:${IN_DOCKER_ROOT_FOLDER}/dl -v ${PWD}/${REPOSITORY}:${IN_DOCKER_ROOT_FOLDER}/ --rm -i ${DOCKER_IMAGE_ORIGIN}:${DOCKER_IMAGE_VERSION} \
          bash -c "ls -la ${IN_DOCKER_ROOT_FOLDER}/dl && cd ${IN_DOCKER_ROOT_FOLDER} && cp target/linux/hi35xx/examples/.config_18ev200_zftlab_rotek ./.config && ./scripts/feeds update glutinium openipc && time make V=s -j$(nproc) "
        echo "::set-output name=status::success"
          
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success'
      with:
        name: ${{ matrix.chip.artifact }}
        path: ${REPOSITORY}/bin

    - name: Create GitHub release with artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${REPOSITORY}/bin
        name: "Build ${GITHUB_SHA}"

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
